# функция для вычисления факториала
def factorial(n):
    if n == 0 or n == 1:
        return 1
    else:
        return n * factorial(n - 1)

# функция для вычисления сочетаний


def combinations(n, k):
    return factorial(n) / (factorial(k) * factorial(n - k))


print("\nИз колоды в 52 карты извлекаются случайным образом 4 карты.")
print("- Найти вероятность того, что все карты – крести.")
print("- Найти вероятность, что среди 4-х карт окажется хотя бы один туз.\n")

# Для решения задачи используем формулу вероятности:
# P(A) = число исходов, благоприятствующих событию A / общее число возможных исходов.
# Вероятность того, что все карты – крести:
# В колоде 52 карты, из которых 13 карт – крести. Таким образом, вероятность того, что первая извлеченная карта будет крести, равна 13/52.
# После этого останется 12 крестей в колоде из 51 карты. Вероятность того, что вторая карта будет крести, при условии,
# что первая карта была крести, равна 12/51. Аналогично, вероятность того, что третья карта будет крести, при условии,
# что первые две карты были крести, равна 11/50. Наконец, вероятность того, что четвертая карта будет крести, при условии,
# что первые три карты были крести, равна 10/49.
# Таким образом, вероятность того, что все 4 карты будут крести, равна:
# P(все карты – крести) = (13/52) * (12/51) * (11/50) * (10/49) = 0.0026410564225690276, или около 0.26%.

# вычисление числа комбинаций из 13 карт крестей
combinations_of_suits = combinations(13, 4)

# вычисление числа возможных комбинаций из 52 карт
total_combinations = combinations(52, 4)

# вычисление вероятности того, что все карты будут крести
probability = combinations_of_suits / total_combinations

print("Вероятность того, что все карты будут крести, равна:\n",
      probability, "или ~", round(probability*100, 2), "%\n")


# Для того, чтобы решить эту задачу, нужно вычислить вероятность того, что среди 4-х карт не будет ни одного туза, 
# а затем вычесть это значение из 1, чтобы получить вероятность того, что хотя бы один туз будет среди 4-х карт.
# В колоде 52 карты, среди которых 4 туза. Общее число возможных комбинаций из 4 карт равно:
# C(52, 4) = 52! / (4! * (52-4)!) = 270725.
# Чтобы вычислить число комбинаций, в которых не будет ни одного туза, нужно выбрать 4 карты из 48 некозырных карт:
# C(48, 4) = 48! / (4! * (48-4)!) = 194580.
# Таким образом, вероятность того, что среди 4-х карт не будет ни одного туза, равна:
# P(без тузов) = 194580 / 270725 = 0.7187367254594146.
# И, соответственно, вероятность того, что хотя бы один туз будет среди 4-х карт, равна:
# P(хотя бы 1 туз) = 1 - P(без тузов) = 1 - 0.7187367254594146 = 0.2812632745405854.
# Ответ: вероятность того, что среди 4-х карт окажется хотя бы один туз, составляет примерно 0.281 или около 28,1%.


# вычисление общего числа возможных комбинаций из 4 карт
total_combinations = combinations(52, 4)

# вычисление числа комбинаций без тузов
combinations_without_aces = combinations(48, 4)

# вычисление числа комбинаций с хотя бы одним тузом
combinations_with_aces = total_combinations - combinations_without_aces

# вычисление вероятности того, что среди 4-х карт будет хотя бы один туз
probability = combinations_with_aces / total_combinations

print("Вероятность того, что среди 4-х карт окажется хотя бы один туз, равна:\n",
      probability, "или ~", round(probability*100, 2), "%\n")
